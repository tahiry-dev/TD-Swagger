openapi: 3.0.1
info:
  title: STD21102
  version: 1.0.0
  contact:
    email: hei.tahiry@gmail.com
servers:
- url: http://STD21102.io/
components:
  schemas:
    Success:
      type: object
      properties:
        name:
          type: string
          example: "Tahiry"
        group:
          type: string
          example: "G3"
        id:
          type: integer
    Error:
      type: object
      properties:
        errorCode:
          type: integer
          example: 400
        errorMessage:
          type: string
          example: "Bad Requests"
    SuccessCourse:
      type: object
      properties:
        course:
          type: string
          example: "ELP1"
        teacher:
          type: string
          example: "Mr Ryan"
    SuccessGroup:
      type: object
      properties:
        group:
          type: string
          example: "G3"
        studentNane:
          type: string
          example: "Tahiry"      
        
paths:
  /students:
    post:
      tags:
      - Students
      summary: Add a new student
      operationId: addStudent
      requestBody:
        description: Student object that needs to be added
        content:
          application/json:
                schema:
                  type: object
                  properties:
                    name:
                      type: string
                      example: "Tahiry"
                    group:
                      type: string
                      example: "G3"
        required: true
      responses:
        200:
          description: Student added
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Success' 
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Error'
    get:
      tags:
      - Students
      summary: Get a list of students
      operationId: getStudent
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: page_size
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Success'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error'
                  
                  
    delete:
      tags:
      - Students
      summary: Delete students
      operationId: deleteStudents
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Success'
  /students/{id}:
    get:
      tags:
      - Students
      summary: Get a particular student
      operationId: getParticulaStudent
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Success'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Students
      summary: Delete a particular student
      operationId: deleteParticularStudent
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: success
        400:
          description: Bad request
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error'
    put:
      tags:
      - Students
      summary: Update informations of a particular Student
      description: Multiple status values can be provided with comma separated strings
      operationId: putstudentId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Tahiry"
                group:
                  type: string
                  example: "G3"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Success'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error'
    patch:
      tags:
      - Students
      summary: Update a precise information of a particular Student
      description: "Possible changes on : name & group"
      operationId: pathstudentId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
            examples:
              changeName:
                summary: Change name
                value:
                  name : 'New name'      
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Success'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error'
  /courses:
    post:
      tags:
      - Courses
      summary: Add a new course
      operationId: addCourse
      requestBody:
        description:  course object that needs to be added
        content:
          application/json:
                schema:
                  type: object
                  properties:
                    course:
                      type: string
                      example: "ELP1"
                    teacher:
                      type: string
                      example: "Mr Ryan"
        required: true
      responses:
        200:
          description: Course added
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/SuccessCourse' 
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Error'
    get:
      tags:
      - Courses
      summary: Get a list of courses
      operationId: getCourse
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: page_size
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuccessCourse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error'             
    delete:
      tags:
      - Courses
      summary: Delete courses
      operationId: deleteCourses
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/SuccessCourse'
  /courses/{id}:
    get:
      tags:
      - Courses
      summary: Get a particular course
      operationId: getParticularCourse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/SuccessCourse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Courses
      summary: Delete a particular course
      operationId: deleteParticularCourse
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: success
        400:
          description: Bad request
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error'
    put:
      tags:
      - Courses
      summary: Update informations of a particular Course
      description: Multiple status values can be provided with comma separated strings
      operationId: putcourseId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                course:
                  type: string
                  example: "ELP1"
                teacher:
                  type: string
                  example: "Mr Ryan"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/SuccessCourse'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error'
    patch:
      tags:
      - Courses
      summary: Update a precise information of a particular Course
      description: "Possible changes on : course & teacher"
      operationId: pathcourseId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
            examples:
              changeTeacher:
                summary: Change teacher
                value:
                  name : 'New Teacher'      
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    course:
                      type: string
                      example: "ELP1"
                    teacher:
                      type: string
                      example: "Mr Toky"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error' 
  /group:
    post:
      tags:
      - Group
      summary: Add a new group
      operationId: addGroup
      requestBody:
        description:  group object that needs to be added
        content:
          application/json:
                schema:
                  type: object
                  properties:
                    group:
                      type: string
                      example: "G3"
                    studentName:
                      type: string
                      example: "Tahiry"
        required: true
      responses:
        200:
          description: group added
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/SuccessGroup' 
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: array
                items:
                 $ref: '#/components/schemas/Error'
    get:
      tags:
      - Group
      summary: Get a list of group
      operationId: getGroup
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int64
      - name: page_size
        in: query
        required: false
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SuccessGroup'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Group
      summary: Delete group
      operationId: deleteGroup
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/SuccessGroup'
  /group/{id}:
    get:
      tags:
      - Group
      summary: Get a particular group
      operationId: getParticularGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/SuccessGroup'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error'
    delete:
      tags:
      - Group
      summary: Delete a particular group
      operationId: deleteParticularGroup
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: success
        400:
          description: Bad request
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error'
    put:
      tags:
      - Group
      summary: Update informations on a particular group
      description: Multiple status values can be provided with comma separated strings
      operationId: putgourpId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                group:
                  type: string
                  example: "G3"
                studentName:
                  type: string
                  example: "Tahiry"
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/SuccessGroup'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error'
    patch:
      tags:
      - Group
      summary: Update a precise information of a particular Group
      description: "Possible changes on : group & student"
      operationId: pathgroupId
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
            examples:
              changeTeacher:
                summary: Change student group
                value:
                  group : 'G1'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                  type: object
                  properties:
                    group:
                      type: string
                      example: "G1"
                    studentName:
                      type: string
                      example: "Tahiry"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Error'               
